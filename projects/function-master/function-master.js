//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object) {
   var arr = [];
   for(var key in object){
       arr.push(object[key]);
   } return arr;
} 

//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
   var st = [];
   for(var key in object){
       st.push(key);
   } return st.join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
  var st = [];
   for(var key in object){
       if(typeof object[key] === 'string'){
       st.push(object[key]);
     }
   } return st.join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
   if (typeof collection === 'object'){
        if(Array.isArray(collection)){
            return 'array';
        } else if (collection === null) {
            return 'null';
        } else if (collection instanceof Date === true) {
            return 'date';
        } return 'object';
    }
}

//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
    return(string.charAt(0).toUpperCase() + string.slice(1));
}

//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
  var arr = string.split(" ");
  var arr2 = [];
  for(let i = 0; i < arr.length; i++){
    arr2.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1));
    } return arr2.join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {
   return "Welcome " + (object.name.charAt(0).toUpperCase() + object.name.slice(1))+ '!';
}

//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function profileInfo(object) {
  return (object.name.charAt(0).toUpperCase() + object.name.slice(1) + 
  " is a " + object.species.charAt(0).toUpperCase() + object.species.slice(1));
}

//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function maybeNoises(object) {
  if(object.noises && Array.isArray(object.noises) && object.noises.length > 0) {
     return object.noises.join(" ");
  } return "there are no noises";  
} 

//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function hasWord(string, word) {
  if (RegExp(word).test(string)) {
    return true;
  }   return false;
}

//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend (name, object) {
  object.friends.push(name);
  return object;
}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {
    if(object.friends){
  for (let i = 0; i < object.friends.length; i++) {
      if (object.friends[i].toLowerCase() === name.toLowerCase()) {
          return true;
      } 
    }
  } return false;
}

//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function nonFriends(name, array) {
    var notFriends = [];
    var count = 0;
  for(let i = 0; i < array.length; i++) {
      for(let j = 0; j < array[i].friends.length; j++) {
      if(array[i].friends[j] !== name) {
           count++;
      } 
    } 
   
  if(count === array[i].friends.length && array[i].name !== name){
    
      notFriends.push(array[i].name);
    } count = 0;
  } return notFriends; 
}
//////////////////////////////////////////////////////////////////////
// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {
 object[key] = value;
 return object; 
}

//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {
 for(let i = 0; i < array.length; i++){
     if (object.hasOwnProperty(array[i])){
         delete object[array[i]];
    }
  }
}

//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array){
  var newArray = [];
  for(let i = 0; i < array.length; i++){
    if (!newArray.includes(array[i])){
      newArray.push(array[i]);
    } 
  } return newArray;
}
//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}